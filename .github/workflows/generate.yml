name: Generate

on:
  push:
    branches:
      - main
  #schedule:
    # Trigger the workflow every day at 4:00 UTC.
  #  - cron: '0 4 * * *'

permissions:
  contents: write

jobs:
  ephemeral-resources:
    name: Ephemeral Resources
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Generate List of Provider Ephemeral Resources
        run: |
          # Create and checkout a new branch for this work.
          branch_name=generate-ephemeral-resources-${{ github.run_id }}
          git branch "${branch_name}" && git push -u origin "${branch_name}" && git checkout "${branch_name}";
          # Generate list of ephemeral resources.
          cd generators/ephemeral_resources
          sudo apt update
          sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt install terraform gh jq
          terraform init
          echo "Generating ephemeral resources from providers..."
          terraform providers schema -json | jq '{"ephemeral": [.provider_schemas | to_entries[] | .value.ephemeral_resource_schemas? | select(.) | keys[] ]}' > ../../data/ephemeral/gen_schema_ephemerals.json
          # Generate list for write-only resources.
          echo "Generating write-only resources from providers..."
          terraform providers schema -json | jq '.provider_schemas | to_entries | map(.value.resource_schemas | to_entries | map(select(.value.block.attributes != null)) | map(select(.value.block.attributes | keys[] | test("^(?!has_).*_wo$"))) | map({key: .key, value: (.value.block.attributes | keys[] | select(test("^(?!has_).*_wo$")))})) | flatten | map({key: .key, value: .value}) | from_entries' > ../../data/gen_write_only.json
          # 0 = no change, 1 = only addition, 2 = deletions included
          CHANGE=$(if [[ -z $(git status -s) ]]; then echo 0; elif [[ -z $(git status -s | grep "^[DR]") ]]; then echo 1; else echo 2; fi)
          echo "Detected change code: $CHANGE"
          
          case $CHANGE in
            0)
              echo "no changes"
              exit 0
              ;; 
            1)
              echo "new resources added, commiting, and opening a pr"
              ;;
            2)
              echo "deletions detected, opening a pr but not merging till reviewed"
              ;;
            *) 
              echo "Error: unexpected status code: $CHANGE"
              exit 2
              ;;
          esac

          echo "git add, commit, push"
          cd ../..
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ./data/ephemeral; git commit -m 'robot: update list of ephemeral resources'; git push


          # Create a pull request with the changes (if necessary).
          echo "gh cli to create pr"
          gh pr create -B main -H "${branch_name}" --title 'Merge "${branch_name}" into main' --body 'Created by Github action'

